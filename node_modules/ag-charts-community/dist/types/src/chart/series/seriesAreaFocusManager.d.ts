import type { TypedEvent } from '../../util/observable';
import { BaseManager } from '../baseManager';
import type { ChartContext } from '../chartContext';
import type { ChartOverlays } from '../overlay/chartOverlays';
import type { Series } from './series';
import type { SeriesProperties } from './seriesProperties';
/** Manages focus and keyboard navigation concerns around the series area and sub-components. */
export declare class SeriesAreaFocusManager extends BaseManager {
    private readonly id;
    private readonly chart;
    private readonly ctx;
    private readonly chartType;
    private readonly overlays;
    private series;
    private seriesRect?;
    private readonly focus;
    constructor(id: string, chart: {
        fireEvent<TEvent extends TypedEvent>(event: TEvent): void;
    }, ctx: ChartContext, chartType: 'cartesian' | 'polar' | 'hierarchy' | 'topology' | 'flow-proportion' | 'gauge', overlays: ChartOverlays);
    seriesChanged(declaredSeries: Series<any, SeriesProperties<any>>[]): void;
    dataChanged(): void;
    preSceneRender(): void;
    private layoutComplete;
    private refreshFocus;
    private onFocus;
    private onNavVert;
    private onNavHori;
    private onAnimationStart;
    private onBlur;
    private handleFocus;
    private handleSeriesFocus;
    private handleHierarchySeriesFocus;
    private updatePickedFocus;
    private onSubmit;
    private getDatumAriaText;
}
