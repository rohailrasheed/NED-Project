import { _ModuleSupport } from 'ag-charts-community';
import { type AnnotationContext, type AnnotationOptionsColorPickerType } from '../annotationTypes';
declare const PointProperties_base: (abstract new (...args: any[]) => {
    id: string;
    isValidWithContext(_context: AnnotationContext, warningPrefix: string): boolean;
    getDefaultColor(colorPickerType: AnnotationOptionsColorPickerType): string | undefined;
    locked?: boolean | undefined;
    visible?: boolean | undefined;
    set(properties: object): any;
    isValid<TContext = Omit<object, "type">>(this: TContext, warningPrefix?: string | undefined): boolean;
    toJson<J>(this: J): object;
}) & {
    new (...args: any[]): {
        x?: string | number | Date | undefined;
        y?: number | undefined;
    };
} & {
    new (...args: any[]): {
        handle: import("../annotationProperties").HandleProperties;
    };
} & typeof _ModuleSupport.BaseProperties;
export declare class PointProperties extends PointProperties_base {
    isValidWithContext(_context: AnnotationContext, warningPrefix?: string): boolean;
    getDefaultColor(_colorPickerType: AnnotationOptionsColorPickerType): string | undefined;
    getDefaultOpacity(_colorPickerType: AnnotationOptionsColorPickerType): number | undefined;
}
export {};
