import { type _ModuleSupport, _Scene } from 'ag-charts-community';
import type { AnnotationContext, Coords, LineCoords } from '../annotationTypes';
import { CollidableLine } from '../scenes/collidableLineScene';
import { LinearScene } from '../scenes/linearScene';
import type { LineTypeProperties } from './lineProperties';
export declare class LineScene extends LinearScene<LineTypeProperties> {
    static is(value: unknown): value is LineScene;
    type: string;
    activeHandle?: 'start' | 'end';
    readonly line: CollidableLine;
    private readonly start;
    private readonly end;
    text?: _Scene.TransformableText;
    private startCap?;
    private endCap?;
    private readonly anchor;
    constructor();
    update(datum: LineTypeProperties, context: AnnotationContext): void;
    updateLine(datum: LineTypeProperties, coords: LineCoords, context: AnnotationContext): void;
    updateHandles(datum: LineTypeProperties, coords: LineCoords, locked: boolean): void;
    private readonly updateText;
    updateCaps(datum: LineTypeProperties, coords: LineCoords): void;
    updateAnchor(coords: LineCoords): void;
    toggleHandles(show: boolean | Partial<Record<'start' | 'end', boolean>>): void;
    toggleActive(active: boolean): void;
    dragHandle(datum: LineTypeProperties, target: Coords, context: AnnotationContext): void;
    stopDragging(): void;
    getAnchor(): _ModuleSupport.ToolbarAnchor;
    getCursor(): "pointer" | undefined;
    containsPoint(x: number, y: number): boolean;
}
