import { _ModuleSupport, _Util } from 'ag-charts-community';
import type { AnnotationsStateMachineContext } from '../annotationsSuperTypes';
import type { PointProperties } from '../properties/pointProperties';
import type { PointScene } from '../scenes/pointScene';
declare const StateMachine: typeof _ModuleSupport.StateMachine;
interface PointStateMachineContext<Datum extends PointProperties, Node extends PointScene<Datum>> extends Omit<AnnotationsStateMachineContext, 'create' | 'node'> {
    create: (datum: Datum) => void;
    node: () => Node | undefined;
    showAnnotationOptions: () => void;
}
export declare abstract class PointStateMachine<Datum extends PointProperties, Node extends PointScene<Datum>> extends StateMachine<'start' | 'waiting-first-render', 'click' | 'cancel' | 'render' | 'reset'> {
    debug: _Util.DebugLogger;
    constructor(ctx: PointStateMachineContext<Datum, Node>);
    protected abstract createDatum(): Datum;
}
export {};
